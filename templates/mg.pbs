#!/bin/bash
#
# Giacomo Mc Evoy - giacomo@lncc.br
# LNCC Brazil 2013
# Adapted from job.PARPARBench
# christian.simmendinger@t-systems.com
#
#PBS -l walltime=0:60:00
#PBS -l nodes=8:ppn=8
#PBS -N mg
#PBS -t 1
#PBS -o /home/shared/execs/mg/test/pbs.out
#PBS -e /home/shared/execs/mg/test/pbs.err

# Var PBS_NODEFILE contains the node names (repeated)

# Execution parameters 
#rnum=$PBS_ARRAYID		# Iteration of experiment (PBS)
#rnum=4		# Iteration of experiment (PBS)

# Deployment parameters
np=64

# Application parameters
name=mg

echo "Running PBS application: mg"
echo "Execution number: $rnum"

# Sort (don't copy) file with node names, to ensure uniqueness
EXEC_PROCS=/tmp/pbs-$name-procs.txt
sort $PBS_NODEFILE > $EXEC_PROCS

# Output dir for this execution set 
#rnum=$(printf "%03d\n" $rnum)
EXEC_OUTPUT_DIR=/home/shared/execs/mg/test/${name}-`date '+%F'`
STDOUT=std.out
STDERR=std.err
CUSTOM=custom.out

# Prepare execution
export PATH=$PATH:/usr/local/bin
mkdir -p $EXEC_OUTPUT_DIR
cd /home/shared/NPB-MG

cp $PBS_NODEFILE /tmp/pbs-nodefile.txt

# Also monitor nodes?
if [ 'False' == 'True' ]; then
	echo -e 'node083\nnode084\nnode085\nnode086\nnode087\nnode088\nnode089\nnode090\nnode091\nnode092\nnode093\nnode094\n' >> /tmp/pbs-nodefile.txt
fi

# Start monitoring
#$HOME/monitor/monitor-start-pbs.sh /tmp/pbs-nodefile.txt

# The actual invocation of the application
/usr/bin/time -f '%C\nUser\tSystem\tEllapsed\n%U\t%S\t%e' -a -o $EXEC_OUTPUT_DIR/../times.txt mpirun run-mg.sh 64 C > $EXEC_OUTPUT_DIR/$STDOUT 2> $EXEC_OUTPUT_DIR/$STDERR

# Stop monitoring (all VMs called at once, async)
#$HOME/monitor/monitor-stop-pbs.sh /tmp/pbs-nodefile.txt $EXEC_OUTPUT_DIR

# Wait for monitoring to stop nicely
sleep 15

# Post-processing of output may be necessary
if [ 'N' == 'Y' ]; then
	cp /home/shared/mg/plbProfile.xml $EXEC_OUTPUT_DIR/$CUSTOM
fi

# Work the SAR files now, to save space
#$HOME/monitor/sar2txt-pbs.sh $EXEC_OUTPUT_DIR /tmp/pbs-nodefile.txt
